All defined functions:

File /usr/include/c++/13/bits/exception.h:
62:     void std::exception::exception();

File /usr/include/c++/13/bits/move.h:
97:     std::remove_reference<int*&>::type &&std::move<int*&>(int*&);
97:     std::remove_reference<std::shared_ptr<int>&>::type &&std::move<std::shared_ptr<int>&>(std::shared_ptr<int>&);
189:    void std::swap<int*>(int*&, int*&);

File /usr/include/c++/13/bits/shared_ptr.h:
414:    std::shared_ptr<int> &std::shared_ptr<int>::operator=(std::shared_ptr<int> const&);
204:    void std::shared_ptr<int>::shared_ptr(std::shared_ptr<int> const&);
359:    void std::shared_ptr<int>::shared_ptr(std::shared_ptr<int>&&);
535:    void std::shared_ptr<int>::shared_ptr(std::weak_ptr<int> const&, std::nothrow_t);
214:    void std::shared_ptr<int>::shared_ptr<int, void>(int*);
380:    void std::shared_ptr<int>::shared_ptr<int, void>(std::weak_ptr<int> const&);
175:    void std::shared_ptr<int>::~shared_ptr();

874:    std::shared_ptr<int> std::weak_ptr<int>::lock() const;
828:    void std::weak_ptr<int>::weak_ptr<int, void>(std::shared_ptr<int> const&);
811:    void std::weak_ptr<int>::~weak_ptr();

File /usr/include/c++/13/bits/shared_ptr_base.h:
151:    void std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy();
268:    bool std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_lock_nothrow();
143:    void std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_destroy();
226:    long std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const;
317:    void std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release();
172:    void std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use();
198:    void std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use_cold();
203:    void std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_weak_add_ref();
208:    void std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_weak_release();
129:    void std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base();
133:    void std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base();
431:    void std::_Sp_counted_ptr<int*, (__gnu_cxx::_Lock_policy)2>::_M_destroy();
427:    void std::_Sp_counted_ptr<int*, (__gnu_cxx::_Lock_policy)2>::_M_dispose();
435:    void *std::_Sp_counted_ptr<int*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&);
423:    void std::_Sp_counted_ptr<int*, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr(int*);
419:    void std::_Sp_counted_ptr<int*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr();
1105:   long std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const;
1097:   void std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&);
908:    void std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count();
1074:   void std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&);
1241:   void std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__weak_count<(__gnu_cxx::_Lock_policy)2> const&);
1251:   void std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__weak_count<(__gnu_cxx::_Lock_policy)2> const&, std::nothrow_t);
913:    void std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<int*>(int*);
927:    void std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<int*>(int*, std::integral_constant<bool, false>);
1082:   std::__shared_count<(__gnu_cxx::_Lock_policy)2> &std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&);
1068:   void std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count();
1765:   void std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<int, int>(int*);
1462:   void std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2>::__shared_ptr();
1522:   void std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2> const&);
1531:   void std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2>&&);
1731:   void std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__weak_ptr<int, (__gnu_cxx::_Lock_policy)2> const&, std::nothrow_t);
1468:   void std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<int, void>(int*);
1547:   void std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<int, void>(std::__weak_ptr<int, (__gnu_cxx::_Lock_policy)2> const&);
1523:   std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2> &std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2> const&);
1641:   void std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2>::reset();
1524:   void std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();
95:     void std::__throw_bad_weak_ptr();
1146:   void std::__weak_count<(__gnu_cxx::_Lock_policy)2>::__weak_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&);
1164:   void std::__weak_count<(__gnu_cxx::_Lock_policy)2>::~__weak_count();
2015:   void std::__weak_ptr<int, (__gnu_cxx::_Lock_policy)2>::__weak_ptr<int, void>(std::__shared_ptr<int, (__gnu_cxx::_Lock_policy)2> const&);
1993:   void std::__weak_ptr<int, (__gnu_cxx::_Lock_policy)2>::~__weak_ptr();
85:     void std::bad_weak_ptr::bad_weak_ptr();

File simple.cpp:
6:      int main();
4:      void my_del(int*);

Non-debugging symbols:
0x0000000000001000  _init
0x00000000000010c0  __cxa_finalize@plt
0x00000000000010d0  __cxa_begin_catch@plt
0x00000000000010e0  __cxa_allocate_exception@plt
0x00000000000010f0  operator new(unsigned long)@plt
0x0000000000001100  operator delete(void*, unsigned long)@plt
0x0000000000001110  __stack_chk_fail@plt
0x0000000000001120  __cxa_rethrow@plt
0x0000000000001130  __cxa_end_catch@plt
0x0000000000001140  __cxa_throw@plt
0x0000000000001150  _Unwind_Resume@plt
0x0000000000001160  _start
